name: run-tests

on:
  push:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  vlucas-phpdotenv-php82:

    name: PHP ${{ matrix.php }} - vlucas/phpdotenv ${{ matrix.vlucas-phpdotenv }} - ${{ matrix.os }} - ${{ matrix.dependency-prefer }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        php: [8.2]
        phpunit: [^9.3]
        vlucas-phpdotenv: [^5.0, ^4.1.5, ^3.6.4, ^2.0, ^1.0]
        dependency-prefer: [prefer-stable, prefer-lowest]
        exclude:
          - os: macos-latest
            vlucas-phpdotenv: ^5.0
            dependency-prefer: prefer-lowest # generates error "Fatal error: During inheritance of IteratorAggregate: Uncaught Return type of PhpOption\Some::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice"
          - os: macos-latest
            vlucas-phpdotenv: ^4.1.5
            dependency-prefer: prefer-lowest # generates error "Fatal error: During inheritance of ArrayAccess: Uncaught Return type of Dotenv\Repository\AbstractRepository::offsetExists($offset) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice"
          - os: macos-latest
            vlucas-phpdotenv: ^3.6.4
            dependency-prefer: prefer-lowest # generates error "Fatal error: During inheritance of ArrayAccess: Uncaught Return type of Dotenv\Environment\AbstractVariables::offsetExists($offset) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice"
          - os: macos-latest
            vlucas-phpdotenv: ^2.0
            dependency-prefer: prefer-lowest # generates error "auto_detect_line_endings is deprecated"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: fileinfo, mbstring
          coverage: none

#      # find out composer's cache directory on the current os - for the "Cache dependencies (composer)" step below
#      - name: Determine composer's cache directory
#        id: composer-cache
#        run: |
#            echo "::set-output name=dir::$(composer config cache-files-dir)"
#
#      - name: Cache dependencies (composer)
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          key: php-${{ matrix.php }}-vlucas-phpdotenv-${{ matrix.vlucas-phpdotenv }}-os-${{ matrix.os }}-dependency-prefer-${{ matrix.dependency-prefer }}-composer-${{ hashFiles('composer.json') }}

      - name: Install dependencies (composer)
        run: |
          composer require "vlucas/phpdotenv:${{ matrix.vlucas-phpdotenv }}" --no-interaction --no-update
          composer require "phpunit/phpunit:${{ matrix.phpunit }}" --dev --no-interaction --no-update
          composer update --${{ matrix.dependency-prefer }} --prefer-dist --no-interaction

      - name: Execute tests
        run: vendor/bin/phpunit

  vlucas-phpdotenv-php81:

    name: PHP ${{ matrix.php }} - vlucas/phpdotenv ${{ matrix.vlucas-phpdotenv }} - ${{ matrix.os }} - ${{ matrix.dependency-prefer }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        php: [8.1]
        phpunit: [^9.3]
        vlucas-phpdotenv: [^5.0, ^4.1.5, ^3.6.4, ^2.0, ^1.0]
        dependency-prefer: [prefer-stable, prefer-lowest]
        exclude:
          - os: macos-latest
            vlucas-phpdotenv: ^5.0
            dependency-prefer: prefer-lowest # generates error "Fatal error: During inheritance of IteratorAggregate: Uncaught Return type of PhpOption\Some::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice"
          - os: macos-latest
            vlucas-phpdotenv: ^4.1.5
            dependency-prefer: prefer-lowest # generates error "Fatal error: During inheritance of ArrayAccess: Uncaught Return type of Dotenv\Repository\AbstractRepository::offsetExists($offset) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice"
          - os: macos-latest
            vlucas-phpdotenv: ^3.6.4
            dependency-prefer: prefer-lowest # generates error "Fatal error: During inheritance of ArrayAccess: Uncaught Return type of Dotenv\Environment\AbstractVariables::offsetExists($offset) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice"
          - os: macos-latest
            vlucas-phpdotenv: ^2.0
            dependency-prefer: prefer-lowest # generates error "auto_detect_line_endings is deprecated"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: fileinfo, mbstring
          coverage: none

#      # find out composer's cache directory on the current os - for the "Cache dependencies (composer)" step below
#      - name: Determine composer's cache directory
#        id: composer-cache
#        run: |
#            echo "::set-output name=dir::$(composer config cache-files-dir)"
#
#      - name: Cache dependencies (composer)
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          key: php-${{ matrix.php }}-vlucas-phpdotenv-${{ matrix.vlucas-phpdotenv }}-os-${{ matrix.os }}-dependency-prefer-${{ matrix.dependency-prefer }}-composer-${{ hashFiles('composer.json') }}

      - name: Install dependencies (composer)
        run: |
          composer require "vlucas/phpdotenv:${{ matrix.vlucas-phpdotenv }}" --no-interaction --no-update
          composer require "phpunit/phpunit:${{ matrix.phpunit }}" --dev --no-interaction --no-update
          composer update --${{ matrix.dependency-prefer }} --prefer-dist --no-interaction

      - name: Execute tests
        run: vendor/bin/phpunit

  vlucas-phpdotenv-php80:

    name: PHP ${{ matrix.php }} - vlucas/phpdotenv ${{ matrix.vlucas-phpdotenv }} - ${{ matrix.os }} - ${{ matrix.dependency-prefer }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        php: ["8.0"]
        phpunit: [^9.3]
        vlucas-phpdotenv: [^5.0, ^4.1.5, ^3.6.4, ^2.0, ^1.0]
        dependency-prefer: [prefer-stable, prefer-lowest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: fileinfo, mbstring
          coverage: none

#      # find out composer's cache directory on the current os - for the "Cache dependencies (composer)" step below
#      - name: Determine composer's cache directory
#        id: composer-cache
#        run: |
#            echo "::set-output name=dir::$(composer config cache-files-dir)"
#
#      - name: Cache dependencies (composer)
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          key: php-${{ matrix.php }}-vlucas-phpdotenv-${{ matrix.vlucas-phpdotenv }}-os-${{ matrix.os }}-dependency-prefer-${{ matrix.dependency-prefer }}-composer-${{ hashFiles('composer.json') }}

      - name: Install dependencies (composer)
        run: |
          composer require "vlucas/phpdotenv:${{ matrix.vlucas-phpdotenv }}" --no-interaction --no-update
          composer require "phpunit/phpunit:${{ matrix.phpunit }}" --dev --no-interaction --no-update
          composer update --${{ matrix.dependency-prefer }} --prefer-dist --no-interaction

      - name: Execute tests
        run: vendor/bin/phpunit

  vlucas-phpdotenv-php74:

    name: PHP ${{ matrix.php }} - vlucas/phpdotenv ${{ matrix.vlucas-phpdotenv }} - ${{ matrix.os }} - ${{ matrix.dependency-prefer }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        php: [7.4]
        phpunit: [^9.0]
        vlucas-phpdotenv: [^5.0, ^4.0, ^3.0, ^2.0, ^1.0]
        dependency-prefer: [prefer-stable, prefer-lowest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: fileinfo, mbstring
          coverage: none

#      # find out composer's cache directory on the current os - for the "Cache dependencies (composer)" step below
#      - name: Determine composer's cache directory
#        id: composer-cache
#        run: |
#            echo "::set-output name=dir::$(composer config cache-files-dir)"
#
#      - name: Cache dependencies (composer)
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          key: php-${{ matrix.php }}-vlucas-phpdotenv-${{ matrix.vlucas-phpdotenv }}-os-${{ matrix.os }}-dependency-prefer-${{ matrix.dependency-prefer }}-composer-${{ hashFiles('composer.json') }}

      - name: Install dependencies (composer)
        run: |
          composer require "vlucas/phpdotenv:${{ matrix.vlucas-phpdotenv }}" --no-interaction --no-update
          composer require "phpunit/phpunit:${{ matrix.phpunit }}" --dev --no-interaction --no-update
          composer update --${{ matrix.dependency-prefer }} --prefer-dist --no-interaction

      - name: Execute tests
        run: vendor/bin/phpunit

  vlucas-phpdotenv-php73:

    name: PHP ${{ matrix.php }} - vlucas/phpdotenv ${{ matrix.vlucas-phpdotenv }} - ${{ matrix.os }} - ${{ matrix.dependency-prefer }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        php: [7.3]
        phpunit: [^9.0]
        vlucas-phpdotenv: [^5.0, ^4.0, ^3.0, ^2.0, ^1.0]
        dependency-prefer: [prefer-stable, prefer-lowest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: fileinfo, mbstring
          coverage: none

#      # find out composer's cache directory on the current os - for the "Cache dependencies (composer)" step below
#      - name: Determine composer's cache directory
#        id: composer-cache
#        run: |
#            echo "::set-output name=dir::$(composer config cache-files-dir)"
#
#      - name: Cache dependencies (composer)
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          key: php-${{ matrix.php }}-vlucas-phpdotenv-${{ matrix.vlucas-phpdotenv }}-os-${{ matrix.os }}-dependency-prefer-${{ matrix.dependency-prefer }}-composer-${{ hashFiles('composer.json') }}

      - name: Install dependencies (composer)
        run: |
          composer require "vlucas/phpdotenv:${{ matrix.vlucas-phpdotenv }}" --no-interaction --no-update
          composer require "phpunit/phpunit:${{ matrix.phpunit }}" --dev --no-interaction --no-update
          composer update --${{ matrix.dependency-prefer }} --prefer-dist --no-interaction

      - name: Execute tests
        run: vendor/bin/phpunit

  vlucas-phpdotenv-php72:

    name: PHP ${{ matrix.php }} - vlucas/phpdotenv ${{ matrix.vlucas-phpdotenv }} - ${{ matrix.os }} - ${{ matrix.dependency-prefer }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        php: [7.2]
        phpunit: [^8.0]
        vlucas-phpdotenv: [^5.0, ^4.0, ^3.0, ^2.0, ^1.0]
        dependency-prefer: [prefer-stable, prefer-lowest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: fileinfo, mbstring
          coverage: none

#      # find out composer's cache directory on the current os - for the "Cache dependencies (composer)" step below
#      - name: Determine composer's cache directory
#        id: composer-cache
#        run: |
#            echo "::set-output name=dir::$(composer config cache-files-dir)"
#
#      - name: Cache dependencies (composer)
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          key: php-${{ matrix.php }}-vlucas-phpdotenv-${{ matrix.vlucas-phpdotenv }}-os-${{ matrix.os }}-dependency-prefer-${{ matrix.dependency-prefer }}-composer-${{ hashFiles('composer.json') }}

      - name: Install dependencies (composer)
        run: |
          composer require "vlucas/phpdotenv:${{ matrix.vlucas-phpdotenv }}" --no-interaction --no-update
          composer require "phpunit/phpunit:${{ matrix.phpunit }}" --dev --no-interaction --no-update
          composer update --${{ matrix.dependency-prefer }} --prefer-dist --no-interaction

      - name: Execute tests
        run: vendor/bin/phpunit

  vlucas-phpdotenv-php71:

    name: PHP ${{ matrix.php }} - vlucas/phpdotenv ${{ matrix.vlucas-phpdotenv }} - ${{ matrix.os }} - ${{ matrix.dependency-prefer }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        php: [7.1]
        phpunit: [^7.0]
        vlucas-phpdotenv: [^5.0, ^4.0, ^3.0, ^2.0, ^1.0]
        dependency-prefer: [prefer-stable, prefer-lowest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: fileinfo, mbstring
          coverage: none

#      # find out composer's cache directory on the current os - for the "Cache dependencies (composer)" step below
#      - name: Determine composer's cache directory
#        id: composer-cache
#        run: |
#            echo "::set-output name=dir::$(composer config cache-files-dir)"
#
#      - name: Cache dependencies (composer)
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          key: php-${{ matrix.php }}-vlucas-phpdotenv-${{ matrix.vlucas-phpdotenv }}-os-${{ matrix.os }}-dependency-prefer-${{ matrix.dependency-prefer }}-composer-${{ hashFiles('composer.json') }}

      - name: Install dependencies (composer)
        run: |
          composer require "vlucas/phpdotenv:${{ matrix.vlucas-phpdotenv }}" --no-interaction --no-update
          composer require "phpunit/phpunit:${{ matrix.phpunit }}" --dev --no-interaction --no-update
          composer update --${{ matrix.dependency-prefer }} --prefer-dist --no-interaction

      - name: Execute tests
        run: vendor/bin/phpunit

  vlucas-phpdotenv-php70:

    name: PHP ${{ matrix.php }} - vlucas/phpdotenv ${{ matrix.vlucas-phpdotenv }} - ${{ matrix.os }} - ${{ matrix.dependency-prefer }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        php: ["7.0"]
        phpunit: [^6.0]
        vlucas-phpdotenv: [^4.0, ^3.0, ^2.0, ^1.0]
        dependency-prefer: [prefer-stable, prefer-lowest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: fileinfo, mbstring
          coverage: none

#      # find out composer's cache directory on the current os - for the "Cache dependencies (composer)" step below
#      - name: Determine composer's cache directory
#        id: composer-cache
#        run: |
#            echo "::set-output name=dir::$(composer config cache-files-dir)"
#
#      - name: Cache dependencies (composer)
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          key: php-${{ matrix.php }}-vlucas-phpdotenv-${{ matrix.vlucas-phpdotenv }}-os-${{ matrix.os }}-dependency-prefer-${{ matrix.dependency-prefer }}-composer-${{ hashFiles('composer.json') }}

      - name: Install dependencies (composer)
        run: |
          composer require "vlucas/phpdotenv:${{ matrix.vlucas-phpdotenv }}" --no-interaction --no-update
          composer require "phpunit/phpunit:${{ matrix.phpunit }}" --dev --no-interaction --no-update
          composer update --${{ matrix.dependency-prefer }} --prefer-dist --no-interaction

      - name: Execute tests
        run: vendor/bin/phpunit



  symfony-dotenv-6:

    name: PHP ${{ matrix.php }} - symfony/dotenv ${{ matrix.symfony-dotenv }} - ${{ matrix.os }} - ${{ matrix.dependency-prefer }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        php: [8.2, 8.1, "8.0"]
        symfony-dotenv: [^6.0]
        dependency-prefer: [prefer-stable, prefer-lowest]
        include:
          - php: 8.2
            phpunit: ^9.3
          - php: 8.1
            phpunit: ^9.3
          - php: "8.0"
            phpunit: ^9.3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: fileinfo, mbstring
          coverage: none

#      # find out composer's cache directory on the current os - for the "Cache dependencies (composer)" step below
#      - name: Determine composer's cache directory
#        id: composer-cache
#        run: |
#          echo "::set-output name=dir::$(composer config cache-files-dir)"
#
#      - name: Cache dependencies (composer)
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          key: php-${{ matrix.php }}-symfony-dotenv-${{ matrix.symfony-dotenv }}-os-${{ matrix.os }}-dependency-prefer-${{ matrix.dependency-prefer }}-composer-${{ hashFiles('composer.json') }}

      - name: Install dependencies (composer)
        run: |
          composer require "symfony/dotenv:${{ matrix.symfony-dotenv }}" "phpunit/phpunit:${{ matrix.phpunit }}" --dev --no-interaction --no-update
          composer update --${{ matrix.dependency-prefer }} --prefer-dist --no-interaction

      - name: Execute tests
        run: vendor/bin/phpunit

  symfony-dotenv-5:

    name: PHP ${{ matrix.php }} - symfony/dotenv ${{ matrix.symfony-dotenv }} - ${{ matrix.os }} - ${{ matrix.dependency-prefer }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        php: [7.4, 7.3, 7.2]
        symfony-dotenv: [^5.0]
        dependency-prefer: [prefer-stable, prefer-lowest]
        include:
          - php: 7.4
            phpunit: ^9.0
          - php: 7.3
            phpunit: ^9.0
          - php: 7.2
            phpunit: ^8.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: fileinfo, mbstring
          coverage: none

#      # find out composer's cache directory on the current os - for the "Cache dependencies (composer)" step below
#      - name: Determine composer's cache directory
#        id: composer-cache
#        run: |
#          echo "::set-output name=dir::$(composer config cache-files-dir)"
#
#      - name: Cache dependencies (composer)
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          key: php-${{ matrix.php }}-symfony-dotenv-${{ matrix.symfony-dotenv }}-os-${{ matrix.os }}-dependency-prefer-${{ matrix.dependency-prefer }}-composer-${{ hashFiles('composer.json') }}

      - name: Install dependencies (composer)
        run: |
          composer require "symfony/dotenv:${{ matrix.symfony-dotenv }}" "phpunit/phpunit:${{ matrix.phpunit }}" --dev --no-interaction --no-update
          composer update --${{ matrix.dependency-prefer }} --prefer-dist --no-interaction

      - name: Execute tests
        run: vendor/bin/phpunit

  symfony-dotenv-4:

    name: PHP ${{ matrix.php }} - symfony/dotenv ${{ matrix.symfony-dotenv }} - ${{ matrix.os }} - ${{ matrix.dependency-prefer }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        php: [7.4, 7.3, 7.2, 7.1]
        symfony-dotenv: [^4.0]
        dependency-prefer: [prefer-stable, prefer-lowest]
        include:
          - php: 7.4
            phpunit: ^9.0
          - php: 7.3
            phpunit: ^9.0
          - php: 7.2
            phpunit: ^8.0
          - php: 7.1
            phpunit: ^7.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: fileinfo, mbstring
          coverage: none

#      # find out composer's cache directory on the current os - for the "Cache dependencies (composer)" step below
#      - name: Determine composer's cache directory
#        id: composer-cache
#        run: |
#          echo "::set-output name=dir::$(composer config cache-files-dir)"
#
#      - name: Cache dependencies (composer)
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          key: php-${{ matrix.php }}-symfony-dotenv-${{ matrix.symfony-dotenv }}-os-${{ matrix.os }}-dependency-prefer-${{ matrix.dependency-prefer }}-composer-${{ hashFiles('composer.json') }}

      - name: Install dependencies (composer)
        run: |
          composer require "symfony/dotenv:${{ matrix.symfony-dotenv }}" "phpunit/phpunit:${{ matrix.phpunit }}" --dev --no-interaction --no-update
          composer update --${{ matrix.dependency-prefer }} --prefer-dist --no-interaction

      - name: Execute tests
        run: vendor/bin/phpunit

  symfony-dotenv-33:

    name: PHP ${{ matrix.php }} - symfony/dotenv ${{ matrix.symfony-dotenv }} - ${{ matrix.os }} - ${{ matrix.dependency-prefer }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        php: [8.2, 8.1, "8.0", 7.4, 7.3, 7.2, 7.1, "7.0"]
        symfony-dotenv: [^3.3]
        dependency-prefer: [prefer-stable, prefer-lowest]
        include:
          - php: 8.2
            phpunit: ^9.3
          - php: 8.1
            phpunit: ^9.3
          - php: "8.0"
            phpunit: ^9.3
          - php: 7.4
            phpunit: ^9.0
          - php: 7.3
            phpunit: ^9.0
          - php: 7.2
            phpunit: ^8.0
          - php: 7.1
            phpunit: ^7.0
          - php: "7.0"
            phpunit: ^6.0
        exclude:
          - os: windows-latest
            symfony-dotenv: ^3.3 # symfony-dotenv on Windows can't read multiple values with different capitalisations at once (e.g. "On" and "on")
          - php: 8.1
            dependency-prefer: prefer-lowest
            symfony-dotenv: ^3.3 # "Deprecated: preg_match(): Passing null to parameter #4 ($flags) of type int is deprecated" exists in symfony-dotenv before 3.3.14

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: fileinfo, mbstring
          coverage: none

#      # find out composer's cache directory on the current os - for the "Cache dependencies (composer)" step below
#      - name: Determine composer's cache directory
#        id: composer-cache
#        run: |
#          echo "::set-output name=dir::$(composer config cache-files-dir)"
#
#      - name: Cache dependencies (composer)
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          key: php-${{ matrix.php }}-symfony-dotenv-${{ matrix.symfony-dotenv }}-os-${{ matrix.os }}-dependency-prefer-${{ matrix.dependency-prefer }}-composer-${{ hashFiles('composer.json') }}

      - name: Install dependencies (composer)
        run: |
          composer require "symfony/dotenv:${{ matrix.symfony-dotenv }}" "phpunit/phpunit:${{ matrix.phpunit }}" --dev --no-interaction --no-update
          composer update --${{ matrix.dependency-prefer }} --prefer-dist --no-interaction

      - name: Execute tests
        run: vendor/bin/phpunit
